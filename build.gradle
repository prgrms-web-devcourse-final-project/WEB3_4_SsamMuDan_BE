plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'ssammudan'
version = '0.0.1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // SpringDoc OpenAPI Starter WebMVC UI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6'

    // Jackson Datatype: JSR310
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.18.3'

    // Flyway MySQL
    implementation 'org.flywaydb:flyway-mysql:11.5.0'

    // Querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'

    // actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Jakarta Annotations API & Jakarta Persistence API
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // P6Spy Spring Boot Starter
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.11.0'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // AutoParams
    testImplementation 'io.github.autoparams:autoparams:9.0.0'

    // Fixture Monkey
    testImplementation 'com.navercorp.fixturemonkey:fixture-monkey-autoparams:1.1.11'
    testImplementation 'com.navercorp.fixturemonkey:fixture-monkey-jackson:1.1.11'
    testImplementation 'com.navercorp.fixturemonkey:fixture-monkey-jakarta-validation:1.1.11'
    testImplementation 'com.navercorp.fixturemonkey:fixture-monkey-mockito:1.1.11'
    testImplementation 'com.navercorp.fixturemonkey:fixture-monkey-starter:1.1.11'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //S3
    implementation("software.amazon.awssdk:s3:2.31.11")

    // Test in Lombok
    testImplementation 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // jwt
    implementation "io.jsonwebtoken:jjwt-api:0.12.6"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:0.12.6"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:0.12.6"

    // coolSms
    implementation 'net.nurigo:sdk:4.3.2'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Querydsl generated directory setting - start
def generatedDir = "src/main/generated"

sourceSets {
    main.java.srcDirs += generatedDir
}

tasks.withType(JavaCompile).configureEach {
    options.generatedSourceOutputDirectory = file(generatedDir)
}

clean {
    doFirst {
        delete file(generatedDir)
    }
}
// Querydsl generated directory setting - end
